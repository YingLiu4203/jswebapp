extends ../chapterLayout
block SectionContent
  :markdown
    JavaScript, as other programming languages, can only be learned by doing. Technically, modern programming languages such as JavaScript, C#,  Java and Scalar use similar programming syntax and except a few cases, are based on the same set of programming concepts such as functions, objects and inheritance. However, mastering a programming language needs a lot of practices to understand numerous details,  common usage patterns and corner cases of the language in real life development. The knowledge of language details, usage patterns and corner cases differentiate a good programmer from a bad programmer and is the reason of the big difference in programming productivity. 

    If the above description remainders you of experience of learning swimming or tennis skills, you get my point. There is no shortcut in learning JavaScript. You need practice, practice and more practices. Nonetheless, learning JavaScript is fun because it enables you to develop amazing Web applications in an efficient way. 

    To read this book, you should follow a RWXD process that consists of four steps: read the text and code, write (manually type) the code, execute the code and debug the code. Please do not copy and paste the code because typing the code give you a chance to learn the language details such as whether or not to put a semicolon at the end of a statement.  When you try to execute the code and encounter weird things, congratulations, it is a good chance to learn something new. At the end, you will learn much more from the writing and debugging than from the reading.   

    A thorny issue in learning JavaScript is that many concepts are mutually dependent on each others. For example, objects are created by functions and functions are objects. Multiple iterations and many practices are required to get a better understanding of language concepts and their relationships.